# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-03 16:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('image', models.ImageField(blank=True, default='', upload_to='uploads/company/')),
                ('description', models.TextField(blank=True, default='')),
                ('address1', models.CharField(blank=True, default='', max_length=64)),
                ('address2', models.CharField(blank=True, default='', max_length=64)),
                ('city', models.CharField(blank=True, default='', max_length=32)),
                ('post_code', models.CharField(blank=True, default='', max_length=10)),
                ('telno', models.CharField(blank=True, default='', max_length=32)),
                ('email', models.EmailField(blank=True, default='', max_length=128)),
                ('website', models.URLField(blank=True, default='', max_length=128)),
                ('facebook', models.CharField(blank=True, default='', max_length=64)),
                ('twitter', models.CharField(blank=True, default='', max_length=64)),
                ('instagram', models.CharField(blank=True, default='', max_length=64)),
                ('primary_contact', models.CharField(blank=True, default='', max_length=64)),
                ('primary_telno', models.CharField(blank=True, default='', max_length=32)),
                ('primary_mobile', models.CharField(blank=True, default='', max_length=32)),
                ('primary_email', models.EmailField(blank=True, default='', max_length=64)),
                ('secondary_contact', models.CharField(blank=True, default='', max_length=64)),
                ('secondary_telno', models.CharField(blank=True, default='', max_length=32)),
                ('secondary_mobile', models.CharField(blank=True, default='', max_length=32)),
                ('secondary_email', models.EmailField(blank=True, default='', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('color', models.CharField(blank=True, default='', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=128)),
                ('rating', models.PositiveIntegerField(blank=True, choices=[(1, '*'), (2, '**'), (3, '***'), (4, '****'), (5, '*****')], null=True)),
                ('body', models.TextField(blank=True, default='')),
                ('url', models.URLField(blank=True, default='', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('image', models.ImageField(blank=True, default='', upload_to='uploads/show/')),
                ('description', models.TextField(blank=True, default='')),
                ('website', models.URLField(blank=True, default='', max_length=128)),
                ('facebook', models.CharField(blank=True, default='', max_length=64)),
                ('twitter', models.CharField(blank=True, default='', max_length=64)),
                ('instagram', models.CharField(blank=True, default='', max_length=64)),
                ('age_range', models.CharField(blank=True, default='', max_length=16)),
                ('strong_language', models.BooleanField(default=False)),
                ('adult', models.BooleanField(default=False)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shows', to='catalog.Company')),
                ('genres', models.ManyToManyField(related_name='shows', to='catalog.Genre')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shows', to='catalog.PaymentType')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('image', models.ImageField(blank=True, default='', upload_to='uploads/venue/')),
                ('description', models.TextField(blank=True, default='')),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('address1', models.CharField(blank=True, default='', max_length=64)),
                ('address2', models.CharField(blank=True, default='', max_length=64)),
                ('city', models.CharField(blank=True, default='', max_length=32)),
                ('post_code', models.CharField(blank=True, default='', max_length=10)),
                ('telno', models.CharField(blank=True, default='', max_length=32)),
                ('email', models.EmailField(blank=True, default='', max_length=128)),
                ('website', models.URLField(blank=True, default='', max_length=128)),
                ('facebook', models.CharField(blank=True, default='', max_length=64)),
                ('twitter', models.CharField(blank=True, default='', max_length=64)),
                ('instagram', models.CharField(blank=True, default='', max_length=64)),
                ('primary_contact', models.CharField(blank=True, default='', max_length=64)),
                ('primary_telno', models.CharField(blank=True, default='', max_length=32)),
                ('primary_mobile', models.CharField(blank=True, default='', max_length=32)),
                ('primary_email', models.EmailField(blank=True, default='', max_length=64)),
                ('secondary_contact', models.CharField(blank=True, default='', max_length=64)),
                ('secondary_telno', models.CharField(blank=True, default='', max_length=32)),
                ('secondary_mobile', models.CharField(blank=True, default='', max_length=32)),
                ('secondary_email', models.EmailField(blank=True, default='', max_length=64)),
            ],
        ),
        migrations.AddField(
            model_name='show',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shows', to='catalog.Venue'),
        ),
        migrations.AddField(
            model_name='review',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='catalog.Show'),
        ),
        migrations.AddField(
            model_name='performance',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='catalog.Show'),
        ),
    ]
